"""
Django settings for bookstore project.

Generated by 'django-admin startproject' using Django 2.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
admin123
admin@123

testuser1
testuser1@gmail.com
testpass123

testuser1@gmail.com
testpass123
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'k@6rj&gf41h34dimx917%7c-r%z!-f0l45hv7*^rb(gcb!1ktz'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
# DEBUG = int(os.environ.get('DEBUG', default=0))

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    # custom apps
    'users.apps.UsersConfig',
    'pages.apps.PagesConfig',

    # third party apps
    'crispy_forms',
    'allauth',  # new
    'allauth.account',  # new

    # built-in app
    'django.contrib.sites',     # new
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'bookstore.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'bookstore.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }

    # 'default': {
    #     'ENGINE': 'django.db.backends.postgresql',
    #     'NAME': 'postgres',
    #     'USER': 'postgres',
    #     'PASSWORD': 'postgres',
    #     'HOST': 'db',
    #     'PORT': 5432
    # }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

DEFAULT_FROM_EMAIL = 'admin@djangobookstore.com'    # new
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'   # new

AUTH_USER_MODEL = 'users.CustomUser'    # new
CRISPY_TEMPLATE_PACK = 'bootstrap4'     # crispy

LOGIN_REDIRECT_URL = 'home'     # new
LOGOUT_REDIRECT_URL = 'home'    # new
ACCOUNT_LOGOUT_REDIRECT = 'home'    # new


STATIC_URL = '/static/'

# location of static files in local development
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static'), ]     # new

# location of static files for production
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')     # new

# tells Django how to look for static file directories. [optional]
STATICFILES_FINDERS = [
    "django.contrib.staticfiles.finders.FileSystemFinder",
    "django.contrib.staticfiles.finders.AppDirectoriesFinder",
]
'''The FileSystemFinder looks within the STATICFILES_DIRS setting, which we set to
static, for any static files. Then the AppDirectoriesFinder looks for any directories
named static located within an app, as opposed to located at a project-level static
directory.'''


# django-allauth config
SITE_ID = 1     # new

# new
AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
)
# new
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
ACCOUNT_SESSION_REMEMBER = True
ACCOUNT_SIGNUP_PASSWORD_ENTER_TWICE = False     # new

# login with email not username
ACCOUNT_USERNAME_REQUIRED = False   # new
ACCOUNT_AUTHENTICATION_METHOD = 'email'     # new
ACCOUNT_EMAIL_REQUIRED = True   # new
ACCOUNT_UNIQUE_EMAIL = True     # new